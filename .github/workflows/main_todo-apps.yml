name: Deploy to Google Cloud Platform

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  SonarCloudScan:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: SonarCloud Scan
          uses: sonarsource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          with:
            args: >
              -Dsonar.projectKey=todo-apps-devops
              -Dsonar.organization=jhoniananta
  test:
    name: Test and Lint
    needs: SonarCloudScan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - name: Set up Node.js version
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.node-version}}
    - name: Install dependencies
      working-directory: ./
      run: npm install  

    - name: Test Eslint Check
      working-directory: ./
      run: npm run lint

  build-and-deploy-using-docker:
    name: Build and Deploy to GCP using GCR
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Log in to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build Docker Image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-apps:${{ github.sha }} .

      - name: Push Docker Image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-apps:${{ github.sha }}
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to App Engine
        run: gcloud app deploy --image-url=gcr.io/${{ secrets.GCP_PROJECT_ID }}/todo-apps:${{ github.sha }} --quiet
      
      #   # Build and push Container image from docker to Azure Container Registry
      # - name: Login to ACR
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: acrcloudtodoapps.azurecr.io
      #     username: ${{ secrets.REGISTERY_USERNAME }}
      #     password: ${{ secrets.REGISTERY_PASSWORD }}

      # - name: Build and push docker image
      #   run: |
      #     docker build --build-arg VITE_BASE_URL=${{secrets.VITE_BASE_URL}} . -t acrcloudtodoapps.azurecr.io/myapp:${{ github.sha }}
      #     docker push acrcloudtodoapps.azurecr.io/myapp:${{ github.sha }}
      
      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: 'todo-apps-frontend'
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
      #     images: 'acrcloudtodoapps.azurecr.io/myapp:${{ github.sha }}'